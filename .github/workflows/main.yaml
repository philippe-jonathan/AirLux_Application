name: main

# Trigger the workflow manually or after push a commit

on:
  push:
    branches:
      - '**'

# 2 jobs are configured.
# The first one runs tests on iOS devices.
# The second runs tests on Android devices
jobs:

  # # job responsible for running Flutter tests on iOS devices
  # ios:
  #   # Creates a build matrix for your jobs. You can define different variations of an environment to run each job
  #   strategy:
  #     matrix:
  #       device:
  #         # The available simulators are listed by the "xcrun xctrace list devices" command
  #         - "iPhone 12 Pro Simulator (16.2)" # the name of the simulator could be different depending on the macos version you are using
  #     # if one of the jobs in the matrix expansion fails, the rest of the jobs will be cancelled
  #     fail-fast: true
  #   runs-on: macos-latest # or macos-latest if you prefer, but be aware that the available simulators could be different if you run a different version
  #   steps:
  #     - name: "List all simulators"
  #       run: "xcrun xctrace list devices"
  #     - name: "Start Simulator"
  #       # the command "xcrun simctl boot" expects a device identifier
  #       # the assignment of the UDID variable consists of retrieving the ID of the simulator
  #       # by extracting it from the command "xcrun xctrace list devices"
  #       run: |
  #         UDID=$(xcrun xctrace list devices | grep "^${{ matrix.device }}" | awk '{gsub(/[()]/,""); print $NF}')
  #         echo $UDID
  #         xcrun simctl boot "${UDID:?No Simulator with this name found}"
  #     - uses: actions/checkout@v3
  #     - name: Setup Flutter SDK
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: stable
  #         # instead of "channel: stable", you could be more precise by specifying the exact version of Flutter you're using:
  #         # flutter-version: '<FLUTTER_VERSION>'
  #     - name: Install Flutter dependencies
  #       run: cd airlux/ && flutter pub get
  #     - name: Run integration tests
  #       run: cd airlux/ && flutter test integration_test
    
  # job responsible for running Flutter tests on Android devices
  # android:
  #   runs-on: macos-latest
  #   strategy:
  #     matrix:
  #       api-level:
  #         - 31
  #         # you can add more API level if you want to run your tests on different API
  #     fail-fast: true
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Setup Flutter SDK
  #       uses: subosito/flutter-action@v2
  #       with:
  #         channel: stable
  #         # instead of "channel: stable", you could be more precise by specifying the exact version of Flutter you're using:
  #         # flutter-version: '<FLUTTER_VERSION>'
  #     - name: Install Flutter dependencies
  #       run: cd airlux/ && flutter pub get
  #     - name: Run integration tests
  #       # more info on https://github.com/ReactiveCircus/android-emulator-runner
  #       uses: reactivecircus/android-emulator-runner@v2
  #       with:
  #         api-level: ${{ matrix.api-level }}
  #         arch: x86_64
  #         profile: Nexus 6
  #         script: cd airlux/ && flutter test integration_test

  android:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Flutter
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Install Android SDK
      - name: Install Android SDK
        run: |
          curl -s "https://get.sdkman.io" | bash
          source "$HOME/.sdkman/bin/sdkman-init.sh"
          sdk install java 18-tem
          yes | sdk install gradle
          yes | sdk install android
        shell: bash

      # Create Android emulator
      - name: Create Android emulator
        run: |
          sdkmanager --install 'system-images;android-31;google_apis;x86_64'
          echo no | avdmanager create avd --force --name emulator --abi 'google_apis/x86_64' --package 'system-images;android-31;google_apis;x86_64'
        shell: bash

      # Start Android emulator
      - name: Start Android emulator
        run: |
          emulator -avd emulator -no-window -no-audio -no-snapshot -no-boot-anim &
          android-wait-for-emulator
        shell: bash

      # Run integration tests
      - name: Run integration tests
        run: |
          cd airlux/
          flutter drive --target=integration_test -d emulator